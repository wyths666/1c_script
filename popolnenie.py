import pandas as pd
import os

# === 1. Проверка файлов ===
files = ['ostatki.xlsx', 'prodano.xlsx']
for f in files:
    if not os.path.exists(f):
        print(f"Файл {f} не найден!")
        exit()

# === 2. Загружаем остатки ===
try:
    df_ost = pd.read_excel('ostatki.xlsx', engine='openpyxl')
except Exception as e:
    print(f"Ошибка чтения остатков: {e}")
    exit()

# Очищаем
df_ost = df_ost.dropna(how='all')
df_ost.columns = ['Номенклатура', 'Остаток_в_магазине', 'Остаток_на_складе']

# Обрабатываем пустые ячейки и нечисловые значения
df_ost['Остаток_в_магазине'] = pd.to_numeric(df_ost['Остаток_в_магазине'], errors='coerce').fillna(0)
df_ost['Остаток_на_складе'] = pd.to_numeric(df_ost['Остаток_на_складе'], errors='coerce').fillna(0)

# Обрезаем последние 4 символа у номенклатуры (как раньше)
df_ost['Номенклатура'] = df_ost['Номенклатура'].apply(
    lambda x: x[:-4] if isinstance(x, str) and len(x) > 4 else x
)

# === 3. Загружаем продажи ===
try:
    df_prod = pd.read_excel('prodano.xlsx', engine='openpyxl')
except Exception as e:
    print(f"Ошибка чтения продаж: {e}")
    exit()

df_prod = df_prod.dropna(how='all')
df_prod.columns = ['Номенклатура', 'Продано']
df_prod['Продано'] = pd.to_numeric(df_prod['Продано'], errors='coerce').fillna(0)

# Тоже обрезаем номенклатуру
df_prod['Номенклатура'] = df_prod['Номенклатура'].apply(
    lambda x: x[:-4] if isinstance(x, str) and len(x) > 4 else x
)

# === 4. Объединяем данные (по номенклатуре) ===
# Используем outer join, чтобы ничего не потерять
df = pd.merge(df_ost, df_prod, on='Номенклатура', how='outer')

# Заполняем NaN
df['Продано'] = df['Продано'].fillna(0)
df['Остаток_в_магазине'] = df['Остаток_в_магазине'].fillna(0)
df['Остаток_на_складе'] = df['Остаток_на_складе'].fillna(0)

# === 5. Фильтруем: только те, где есть продажи ИЛИ остаток на складе > 0
# Чтобы не включать "мертвые" товары
mask = (df['Продано'] > 0) | (df['Остаток_на_складе'] > 0)
df = df[mask].copy()
df = df[df['Остаток_на_складе'] > 0].copy()


# === 6. Рассчитываем рекомендацию ===
df['Рекомендуется_к_заказу'] = df['Продано'] - df['Остаток_в_магазине']
df['Рекомендуется_к_заказу'] = df['Рекомендуется_к_заказу'].clip(lower=0)  # не меньше 0

# Ограничиваем по остатку на складе
df['Рекомендуется_к_заказу'] = df[['Рекомендуется_к_заказу', 'Остаток_на_складе']].min(axis=1)

# Убираем строки, где рекомендация = 0
df = df[df['Рекомендуется_к_заказу'] > 0].copy()

# Дополнительное условие: если на складе 0, но товар продавался — всё равно показываем?
# Да, показываем, но "Рекомендуется_к_заказу" может быть >0, даже если на складе нет

# === 7. Формируем итоговую таблицу ===
result = df[[
    'Номенклатура',
    'Продано',
    'Остаток_в_магазине',
    'Остаток_на_складе',
    'Рекомендуется_к_заказу'
]].copy()

# Переименовываем столбцы для итогового файла
result.columns = [
    'Номенклатура',
    'Продажи за 3 недели',
    'Остаток в магазине',
    'Остаток на складе',
    'Рекомендуется к заказу'
]

# Сортируем по "рекомендуется к заказу" (сверху — самые нужные)
result = result.sort_values(by='Рекомендуется к заказу', ascending=False)

# Сохраняем
result.to_excel('рекомендации_к_пополнению.xlsx', index=False)

print(f"Готово! Сформировано {len(result)} позиций для анализа.")
print("Результат сохранён в 'рекомендации_к_пополнению.xlsx'")